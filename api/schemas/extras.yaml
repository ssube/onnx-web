$id: https://github.com/ssube/onnx-web/blob/main/api/schemas/extras.yaml
$schema: https://json-schema.org/draft/2020-12/schema

$defs:
  legacy_tuple:
    type: array
    items:
      oneOf:
        - type: boolean
        - type: number
        - type: string

  tensor_format:
    type: string
    enum: [bin, ckpt, onnx, pt, pth, safetensors]

  embedding_network:
    type: object
    required: [name, source]
    properties:
      format:
        $ref: "#/$defs/tensor_format"
      label:
        type: string
      model:
        type: string
        enum: [concept, embeddings]
      name:
        type: string
      source:
        type: string
      token:
        type: string
      type:
        type: string
        const: inversion # TODO: add embedding
      weight:
        type: number

  lora_network:
    type: object
    required: [name, source, type]
    properties:
      label:
        type: string
      model:
        type: string
        enum: [cloneofsimo, sd-scripts]
      name:
        type: string
      source:
        type: string
      tokens:
        type: array
        items:
          type: string
      type:
        type: string
        const: lora
      weight:
        type: number

  base_model:
    type: object
    required: [name, source]
    properties:
      format:
        $ref: "#/$defs/tensor_format"
      half:
        type: boolean
      label:
        type: string
      name:
        type: string
      opset:
        type: number
      source:
        type: string

  correction_model:
    allOf:
      - $ref: "#/$defs/base_model"
      - type: object
        properties:
          model:
            type: string
            enum: [
              codeformer,
              gfpgan
            ]

  diffusion_model:
    allOf:
      - $ref: "#/$defs/base_model"
      - type: object
        properties:
          config:
            type: string
          hash:
            type: string
          image_size:
            type: number
          inversions:
            type: array
            items:
              $ref: "#/$defs/embedding_network"
          loras:
            type: array
            items:
              $ref: "#/$defs/lora_network"
          pipeline:
            type: string
            enum: [
              controlnet,
              img2img,
              inpaint,
              lpw,
              panorama,
              pix2pix,
              txt2img,
              txt2img-sdxl,
              upscale,
            ]
          vae:
            type: string
          version:
            type: string
            enum: [
              v1,
              v2,
              v2.1,
            ]

  upscaling_model:
    allOf:
      - $ref: "#/$defs/base_model"
      - type: object
        required: [scale]
        properties:
          model:
            type: string
            enum: [
              bsrgan,
              resrgan,
              swinir
            ]
          scale:
            type: number

  source_model:
    type: object
    required: [name, source]
    properties:
      dest:
        type: string
      format:
        type: string
      name:
        type: string
      source:
        type: string

  translation:
    type: object
    additionalProperties: False
    patternProperties:
      "(\\w|\\.|-)+":
        oneOf:
          - type: string
          - $ref: "#/$defs/translation"

type: object
additionalProperties: False
properties:
  diffusion:
    type: array
    items:
      oneOf:
        - $ref: "#/$defs/legacy_tuple"
        - $ref: "#/$defs/diffusion_model"
  correction:
    type: array
    items:
      oneOf:
        - $ref: "#/$defs/legacy_tuple"
        - $ref: "#/$defs/correction_model"
  networks:
    type: array
    items:
      oneOf:
        - $ref: "#/$defs/lora_network"
        - $ref: "#/$defs/embedding_network"
  sources:
    type: array
    items:
      oneOf:
        - $ref: "#/$defs/legacy_tuple"
        - $ref: "#/$defs/source_model"
  strings:
    type: object
    additionalProperties: False
    patternProperties:
      "^\\w\\w$":
        $ref: "#/$defs/translation"
  upscaling:
    type: array
    items:
      oneOf:
        - $ref: "#/$defs/legacy_tuple"
        - $ref: "#/$defs/upscaling_model"